# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
# Adding a comment to check if CI pipeline is triggered or not

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:

# - task: GitHubComment@0
#   inputs:
#     gitHubConnection: 'GitHub'
#     repositoryName: 'anupagarw/DevopsBasics'
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- task: CopyFiles@2
  inputs:
    Contents: '**/*.war'
    TargetFolder: '$(build.artifactstagingdirectory)'


#
# - task: DownloadPackage@1
#   inputs:
#     packageType: 'nuget'
#     feed: 'e0dbf50f-79a0-4290-aa13-35ab538d7dcb/ac35df03-956b-4d62-9a2b-f882097518d7'
#     view: 'b10b1f1c-bd1f-4a74-8911-99ea20073220'
#     definition: '72e00b82-c475-4fab-bf81-8915ce771fa0'
#     version: '2.0.1'
#     downloadPath: '$(System.ArtifactsDirectory)'


- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Artifact-01'
    publishLocation: 'Container'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    publishLocation: 'pipeline'